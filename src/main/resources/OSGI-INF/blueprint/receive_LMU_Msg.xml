<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
 	   xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
       xmlns:camel="http://camel.apache.org/schema/blueprint"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

<cm:property-placeholder id="placeholder" persistent-id="latlon.database.getmsg">
    <cm:default-properties>
      <cm:property name="amq.username" value="admin"/>
      <cm:property name="amq.password" value="admin"/>
      <cm:property name="amq.url" value="discovery:(fabric:latlon)"/>
      <cm:property name="db.username" value="devsa"/>
      <cm:property name="db.password" value="Magma1"/>
      <cm:property name="db.url" value="jdbc:sqlserver://10.10.110.103\dev;databaseName=BSM_LATLON"/>
    </cm:default-properties>
  </cm:property-placeholder>
  
<!--*************** this is the JDBC data sources for development test ******************************************************-->

<bean id="BSM-db" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
  <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
   <property name="url" value="${db.url}"/>
  <property name="username" value="${db.username}"/>
  <property name="password" value="${db.password}"/>
</bean>

<!--*****************************************************************************************************************-->

  
<!-- Imported OSGi services includes the Transaction manager and JDBC DataSource -->
 <!--
<reference id="BSM-db" interface="javax.sql.DataSource" availability="mandatory" filter="(datasource.name=SQL_Tgt_LL)"/> 
 -->

<bean id="sqlTgt" class="org.apache.camel.component.sql.SqlComponent">
  <property name="dataSource" ref="BSM-db"/>
</bean>


<!--*************** this is the JMS data source for AMQ *******************************************************-->

<bean id="jmsConnectionFactory" 
   class="org.apache.activemq.ActiveMQConnectionFactory">
   <property name="brokerURL" value="${amq.url}"/>
   <property name="userName" value="${amq.username}" />
   <property name="password" value="${amq.password}" />
</bean>
 
<bean id="pooledConnectionFactory" 
   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
   <property name="maxConnections" value="8" />
   <property name="connectionFactory" ref="jmsConnectionFactory" />
</bean>
 

<!-- 
<reference id="pooledConnectionFactory" interface="javax.jms.ConnectionFactory" availability="mandatory" filter="(name=AMQBR)"/> 
-->  
<bean id="activemq" 
    class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="connectionFactory" ref="pooledConnectionFactory"/>
</bean>   
  
  
  <camelContext trace="false" xmlns="http://camel.apache.org/schema/blueprint">
  <propertyPlaceholder location="classpath:sql.properties" id="properties"/>
  <route id="LatLon LMU_Message AMQToDb">
    <from uri="activemq:queue:LatLonLMUDevice"/>
    <log message="Inserting LMU for Id: ${body[MESSAGE_TYPE_ID]}" loggingLevel="INFO"/>
    <to uri="sqlTgt:{{sql.insertLMU}}" id="Insert LMU Data"/>
    <to uri="sqlTgt:{{sql.insertReport}}" id="Insert Common Data"/>
    <multicast id="Store Optional Data">
      <filter id="Check For Impact Data">
        <simple>${body[IMPACT_MSG_ID]} != null</simple>
        <log message="Inserting for Impact Id: ${body[IMPACT_MSG_ID]}" loggingLevel="INFO"/>
        <to uri="sqlTgt:{{sql.insertImpact}}" id="Insert Impact Data"/>
      </filter>
      <filter id="Check For Unit Health Data">
        <simple>${body[UNIT_HEALTH_ID]} != null</simple>
        <log message="Inserting for UNIT HEALTH Id: ${body[UNIT_HEALTH_ID]}" loggingLevel="INFO"/>
        <to uri="sqlTgt:{{sql.insertUnitHealth}}" id="Insert Unit Health Data"/>
      </filter>
    </multicast>
  </route>
</camelContext>

</blueprint>
